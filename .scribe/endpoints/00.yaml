name: Authentication
description: |-

  APIs for managing user authentication
endpoints:
  -
    custom: []
    httpMethods:
      - POST
    uri: api/login
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login'
      description: |-
        Authenticate a user and return an access token. The token will be valid for 30 days.
        A secure HTTP-only cookie will also be set for web authentication.
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        custom: []
        name: email
        description: "The user's email address."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      email: john@example.com
      password: password123
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "code": 200,
            "message": "Login successful",
            "data": {
              "user": {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "email_verified_at": "2024-01-01T00:00:00.000000Z",
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              },
              "token": "1|abcdef123456789...",
              "token_type": "Bearer",
              "expires_in": 2592000
            },
            "pagination": {}
          }
        headers: []
        description: 'Successful login'
      -
        custom: []
        status: 401
        content: |-
          {
            "code": 401,
            "message": "The provided credentials do not match our records",
            "data": [],
            "pagination": {}
          }
        headers: []
        description: 'Invalid credentials'
      -
        custom: []
        status: 422
        content: |-
          {
            "code": 422,
            "message": "Validation failed",
            "data": {
              "errors": {
                "email": ["The email field is required."],
                "password": ["The password field is required."]
              }
            },
            "pagination": {}
          }
        headers: []
        description: 'Validation error'
    responseFields:
      code:
        custom: []
        name: code
        description: 'HTTP status code'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      message:
        custom: []
        name: message
        description: 'Response message'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.user:
        custom: []
        name: data.user
        description: 'User information'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.token:
        custom: []
        name: data.token
        description: 'Bearer token for API authentication'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.token_type:
        custom: []
        name: data.token_type
        description: 'Token type (always "Bearer")'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.expires_in:
        custom: []
        name: data.expires_in
        description: 'Token expiration time in seconds'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      pagination:
        custom: []
        name: pagination
        description: 'Pagination information (empty for this endpoint)'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/refresh
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh Token'
      description: |-
        Refresh the user's access token by providing valid credentials.
        This will revoke the current token and generate a new one.
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        custom: []
        name: email
        description: "The user's email address."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      email: john@example.com
      password: password123
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "code": 200,
            "message": "Token refreshed successfully",
            "data": {
              "user": {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "email_verified_at": "2024-01-01T00:00:00.000000Z",
                "created_at": "2024-01-01T00:00:00.000000Z",
                "updated_at": "2024-01-01T00:00:00.000000Z"
              },
              "token": "2|newtoken123456789...",
              "token_type": "Bearer",
              "expires_in": 2592000
            },
            "pagination": {}
          }
        headers: []
        description: 'Token refreshed successfully'
      -
        custom: []
        status: 401
        content: |-
          {
            "code": 401,
            "message": "The provided credentials do not match our records",
            "data": [],
            "pagination": {}
          }
        headers: []
        description: 'Invalid credentials'
      -
        custom: []
        status: 422
        content: |-
          {
            "code": 422,
            "message": "Validation failed",
            "data": {
              "errors": {
                "email": ["The email field is required."],
                "password": ["The password field is required."]
              }
            },
            "pagination": {}
          }
        headers: []
        description: 'Validation error'
    responseFields:
      code:
        custom: []
        name: code
        description: 'HTTP status code'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      message:
        custom: []
        name: message
        description: 'Response message'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.user:
        custom: []
        name: data.user
        description: 'User information'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.token:
        custom: []
        name: data.token
        description: 'New bearer token for API authentication'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.token_type:
        custom: []
        name: data.token_type
        description: 'Token type (always "Bearer")'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data.expires_in:
        custom: []
        name: data.expires_in
        description: 'Token expiration time in seconds'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      pagination:
        custom: []
        name: pagination
        description: 'Pagination information (empty for this endpoint)'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: |-

        APIs for managing user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'User Logout'
      description: |-
        Logout the authenticated user by revoking all their tokens.
        This will invalidate the current session and require re-authentication.
      authenticated: true
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "code": 200,
            "message": "Successfully logged out",
            "data": [],
            "pagination": {}
          }
        headers: []
        description: 'Successful logout'
      -
        custom: []
        status: 401
        content: |-
          {
            "code": 401,
            "message": "Unauthenticated",
            "data": [],
            "pagination": {}
          }
        headers: []
        description: Unauthenticated
    responseFields:
      code:
        custom: []
        name: code
        description: 'HTTP status code'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      message:
        custom: []
        name: message
        description: 'Response message'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      data:
        custom: []
        name: data
        description: 'Empty data array'
        required: false
        example: null
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      pagination:
        custom: []
        name: pagination
        description: 'Pagination information (empty for this endpoint)'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    auth: []
    controller: null
    method: null
    route: null
